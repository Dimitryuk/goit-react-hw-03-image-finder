{"version":3,"sources":["SearchBar/SearchBar.jsx","Button/Button.jsx","ImageGalleryItem/ImageGalleryItem.jsx","Loader/Loader.jsx","ModalWindow/ModalWindow.jsx","ImageGallery/ImageGallery.jsx","Services/ImageFinderAPI.js","Container/Container.jsx","App.js","index.js"],"names":["Searchbar","state","searchValue","getSearchValue","evt","setState","target","value","submitSearchValue","preventDefault","props","onSubmit","reset","className","this","type","autoComplete","autoFocus","placeholder","onChange","Component","Button","onLoadMoreClick","onClick","ImageGalleryItem","webformatURL","onOpen","largeImageURL","src","alt","LoaderSpin","color","height","width","timeout","modalRoot","document","querySelector","Modal","handleKeyDown","code","onClose","handleBackdropClick","currentTarget","window","addEventListener","removeEventListener","createPortal","children","ImageGallery","baseApi","myApiKey","page","pictures","error","largeUrl","showModal","status","getPictures","array","newArr","map","picture","id","scrollTo","top","documentElement","scrollHeight","behavior","toggleModal","takeModalPicture","url","prevProps","prevState","prevInputValue","inputValue","nextInputValue","prevPage","nextPage","axios","get","then","r","data","hits","fetchPictures","length","catch","Container","App","loading","handleFormSubmit","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.59b92caa.chunk.js","sourcesContent":["import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Searchbar extends Component {\r\n  state = {\r\n    searchValue: '',\r\n  };\r\n\r\n  getSearchValue = evt => {\r\n    this.setState({\r\n      searchValue: evt.target.value,\r\n    });\r\n  };\r\n\r\n  submitSearchValue = evt => {\r\n    evt.preventDefault();\r\n\r\n    this.props.onSubmit(this.state.searchValue);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({\r\n      searchValue: '',\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <header className=\"Searchbar\">\r\n        <form className=\"SearchForm\" onSubmit={this.submitSearchValue}>\r\n          <button type=\"submit\" className=\"SearchForm-button\">\r\n            <span className=\"SearchForm-button-label\">Search</span>\r\n          </button>\r\n\r\n          <input\r\n            className=\"SearchForm-input\"\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n            value={this.state.searchValue}\r\n            onChange={this.getSearchValue}\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nSearchbar.propTypes = {\r\n  onSubmit: PropTypes.func,\r\n};\r\n\r\nexport default Searchbar;\r\n","import PropTypes from 'prop-types';\r\nexport default function Button({ onLoadMoreClick }) {\r\n  return (\r\n    <div className=\"more\">\r\n      <button type=\"submit\" className=\"Button\" onClick={onLoadMoreClick}>\r\n        Load More\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nButton.propTypes = {\r\n  onLoadMoreClick: PropTypes.func,\r\n};\r\n","import PropTypes from 'prop-types';\r\nexport default function ImageGalleryItem({\r\n  webformatURL,\r\n  onOpen,\r\n  largeImageURL,\r\n}) {\r\n  return (\r\n    <li className=\"ImageGalleryItem\" onClick={() => onOpen(largeImageURL)}>\r\n      <img src={webformatURL} alt=\"nice\" className=\"ImageGalleryItem-image\" />\r\n    </li>\r\n  );\r\n}\r\n\r\nImageGalleryItem.propTypes = {\r\n  webformatURL: PropTypes.string,\r\n  onOpen: PropTypes.func,\r\n  largeImageURL: PropTypes.string,\r\n};\r\n","// import { ImSpinner } from 'react-icons/im';\r\n\r\n// export default function Loader() {\r\n//   return (\r\n//     <div className=\"spinner\">\r\n//       <div>\r\n//         <ImSpinner size=\"35\" className=\"icon-spiner\" />\r\n//         Loading...\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\nimport { Component } from 'react';\r\nimport Loader from 'react-loader-spinner';\r\nexport default class LoaderSpin extends Component {\r\n  //other logic\r\n  render() {\r\n    return (\r\n      <Loader\r\n        type=\"Puff\"\r\n        color=\"#00BFFF\"\r\n        height={100}\r\n        width={100}\r\n        timeout={3000} //3 secs\r\n      />\r\n    );\r\n  }\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport { Component } from 'react';\r\nimport { createPortal } from 'react-dom';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\nexport default class Modal extends Component {\r\n  componentDidMount() {\r\n    window.addEventListener('keydown', this.handleKeyDown);\r\n  }\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  handleKeyDown = evt => {\r\n    if (evt.code === 'Escape') {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  handleBackdropClick = evt => {\r\n    if (evt.currentTarget === evt.target) {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n  render() {\r\n    return createPortal(\r\n      <div className=\"Overlay\" onClick={this.handleBackdropClick}>\r\n        <div className=\"Modal\">{this.props.children}</div>\r\n      </div>,\r\n      modalRoot,\r\n    );\r\n  }\r\n}\r\n\r\nModal.propTypes = {\r\n  children: PropTypes.node,\r\n  onClose: PropTypes.func,\r\n};\r\n","import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { fetchPictures } from '../Services/ImageFinderAPI';\r\nimport Button from '../Button/Button';\r\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\r\nimport LoaderSpin from '../Loader/Loader.jsx';\r\nimport Modal from '../ModalWindow/ModalWindow';\r\n\r\nexport default class ImageGallery extends Component {\r\n  state = {\r\n    baseApi: 'https://pixabay.com/api/',\r\n    myApiKey: '22969021-19f1494240440c9eacf690dfa',\r\n    page: 1,\r\n    pictures: [],\r\n    error: null,\r\n    largeUrl: '',\r\n    showModal: false,\r\n    status: 'idle',\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const { baseApi, myApiKey, page } = this.state;\r\n    const prevInputValue = prevProps.inputValue;\r\n    const nextInputValue = this.props.inputValue;\r\n    const prevPage = prevState.page;\r\n    const nextPage = this.state.page;\r\n\r\n    if (prevInputValue !== nextInputValue || prevPage !== nextPage) {\r\n      this.setState({ status: 'pending' });\r\n\r\n      fetchPictures(nextInputValue, baseApi, myApiKey, page)\r\n        .then(pictures => {\r\n          if (pictures.length === 0) {\r\n            return this.setState({ status: 'rejected' });\r\n          }\r\n\r\n          this.getPictures(pictures);\r\n        })\r\n        .then(this.setState({ status: 'resolved' }))\r\n        .catch(error => this.setState({ error, status: 'rejected' }));\r\n    }\r\n  }\r\n\r\n  getPictures = array => {\r\n    const newArr = array.map(picture => {\r\n      return {\r\n        id: picture.id,\r\n        webformatURL: picture.webformatURL,\r\n        largeImageURL: picture.largeImageURL,\r\n      };\r\n    });\r\n\r\n    this.setState({\r\n      pictures: [...newArr],\r\n    });\r\n\r\n    window.scrollTo({\r\n      top: document.documentElement.scrollHeight,\r\n      behavior: 'smooth',\r\n    });\r\n  };\r\n\r\n  onLoadMoreClick = () => {\r\n    this.setState({\r\n      page: this.state.page + 1,\r\n    });\r\n  };\r\n\r\n  toggleModal = () => {\r\n    this.setState(({ showModal }) => ({\r\n      showModal: !showModal,\r\n    }));\r\n  };\r\n\r\n  takeModalPicture = url => {\r\n    this.setState({ largeUrl: url, showModal: true });\r\n  };\r\n\r\n  render() {\r\n    const { pictures, status, showModal, largeUrl } = this.state;\r\n    const { takeModalPicture, toggleModal, onLoadMoreClick } = this;\r\n    // const { inputValue } = this.props;\r\n\r\n    if (status === 'idle') {\r\n      return <div className=\"startPage\">Enter Something</div>;\r\n    }\r\n    if (status === 'pending') {\r\n      return <LoaderSpin />;\r\n    }\r\n    if (status === 'rejected') {\r\n      return (\r\n        <div className=\"info\">\r\n          <b>An Error occurred. Try again.</b>\r\n        </div>\r\n      );\r\n    }\r\n    if (status === 'resolved') {\r\n      return (\r\n        <div>\r\n          <ul className=\"ImageGallery\">\r\n            {pictures.map(picture => (\r\n              <ImageGalleryItem\r\n                key={picture.id}\r\n                webformatURL={picture.webformatURL}\r\n                largeImageURL={picture.largeImageURL}\r\n                onOpen={takeModalPicture}\r\n              />\r\n            ))}\r\n          </ul>\r\n          {showModal && (\r\n            <Modal onClose={toggleModal}>\r\n              <img src={largeUrl} alt=\"modal-img\" />\r\n              <button type=\"button\" onClick={toggleModal}>\r\n                Close Modal\r\n              </button>\r\n            </Modal>\r\n          )}\r\n          <Button onLoadMoreClick={onLoadMoreClick} />\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nImageGallery.propTypes = {\r\n  inputValue: PropTypes.string,\r\n};\r\n","import axios from 'axios';\r\n\r\nexport function fetchPictures(inputValue, baseApi, myApiKey, page) {\r\n  return axios\r\n    .get(\r\n      `${baseApi}?q=${inputValue}&page=${page}&key=${myApiKey}&image_type=photo&orientation=horizontal&per_page=12`,\r\n    )\r\n    .then(r => r.data.hits);\r\n}\r\n","import React from 'react';\r\n\r\nconst Container = ({ children }) => <div>{children}</div>;\r\n\r\nexport default Container;\r\n","import { Component } from 'react';\r\nimport Searchbar from './SearchBar/SearchBar.jsx';\r\nimport ImageGallery from './ImageGallery/ImageGallery.jsx';\r\nimport Container from './Container/Container.jsx';\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    loading: false,\r\n    inputValue: '',\r\n  };\r\n\r\n  handleFormSubmit = inputValue => {\r\n    this.setState({ inputValue });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Container>\r\n          <Searchbar onSubmit={this.handleFormSubmit} />\r\n          <ImageGallery inputValue={this.state.inputValue} />\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}